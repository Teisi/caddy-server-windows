# Usage: import security_headers
(security_headers) {
    header {
        -server
        -X-Powered-By
        # -Link

        # disable FLoC tracking
        Permissions-Policy interest-cohort=()

        # enable HSTS
        Strict-Transport-Security max-age=31536000;

        # disable clients from sniffing the media type
        X-Content-Type-Options nosniff

        # clickjacking protection
        X-Frame-Options SAMEORIGIN # DENY

        # keep referrer data off of HTTP connections
        Referrer-Policy no-referrer-when-downgrade
    }
}

# Usage: import logger "HOST_APP_FOLDER" "LOG_LEVEL"
(logger) {
    # Log Settings
    log {
        format json {
            time_format iso8601
        }

        output file {args[0]} {
            roll_size 100mb
            roll_keep 7
            roll_keep_for 24h
        }

        # level ERROR = smaller logs and better performance
        # level INFO = log everything (access + errors)
        level {args[1]}
    }
}

# Encoding
# Usage: import encoding
(encoding) {
    encode gzip zstd
}

# Allow / Disallow / General Folder Protection (Files / Folders)
# Usage: import responds
(responds) {
    # See also: https://caddyserver.com/docs/caddyfile/matchers#path
    # See also: https://caddyserver.com/docs/caddyfile/matchers#path-regexp
    respond /.* 403
    respond /conf/* 403
    respond /config/* 403
    respond /core/* 403
    respond /vendor/* 403
    respond /var/* 403
    respond /src/* 403
    respond /*.md 403
    respond /lang/* 403
    respond /node_modules/* 403
    respond /private/* 403
    respond /tmp/* 403
    respond /xmlrpc.php 403
    # respond /*.php 404 # This will make problems for multiple systems
    # respond /typo3/sysext/*/*.php 404
    # respond /**/*.php 404 # Double asterisk weird behavior

    # Disallow REGEX Files & Folders:
    @disallowFileTypes {
        path_regexp \.(sql|sh|jar|java|py|rb|exe)$
    }
    @disallowPhpFolders {
        path_regexp \/(src|uploads|upload|fileadmin|cache|temp|typo3temp|public|Public|assets|css|img|js|static|vendor)\/.*\.(php)$
    }
    @disallowNodeFolders {
        path_regexp \/(uploads|upload|css|img)\/.*\.(js|jsx|ts)$
    }
    respond @disallowFileTypes 415
    respond @disallowPhpFolders 403
    respond @disallowNodeFolders 403
    # rewrite @disallowedResponds /index.php
}

(responds_phpmyadmin) {
    respond /.* 403
    respond /conf/* 403
    respond /config/* 403
    respond /core/* 403
    respond /vendor/* 403
    respond /var/* 403
    respond /src/* 403
    respond /*.md 403
    respond /lang/* 403
    respond /node_modules/* 403
    respond /private/* 403
    respond /tmp/* 403
    respond /xmlrpc.php 403

    # Disallow REGEX Files & Folders:
    @disallowFileTypes {
        path_regexp \.(sql|sh|jar|java|py|rb|exe)$
    }
    @disallowPhpFolders {
        path_regexp \/(src|uploads|upload|fileadmin|cache|temp|typo3temp|public|Public|assets|css|img|static|vendor)\/.*\.(php)$
    }
    respond @disallowFileTypes 415
    respond @disallowPhpFolders 403
}

# IP Protection
# (protect one or more paths by IP Whitelisting)
# Usage: import ip_protection "/backend/* /admin/*" "88.111.0.0/16 222.66.88.0/24"
# (use it at the very top of your caddy domain-/site-block if possible)
(ip_protection) {
    @protected_paths path {args[0]} # Example: /backend/* /typo3/* /admin/* /wp-admin/* /xmlrpc.php /wp-login.php
    @protected_ips not remote_ip {args[1]}  # Example: 88.111.0.0/16 222.66.88.0/24

    handle @protected_paths {
        respond @protected_ips "Access Denied" 403
    }
}

# Redirect (temporarily)
# (works only if args.0 is a single domain, does not work with multiple domains as string argument)
(app_redirect_temporary) {
    {args[0]} {
        redir https://{args[1]}
    }
}

# Redirect (permanent)
# (works only if args.0 is a single domain, does not work with multiple domains as string argument)
(app_redirect_permanent) {
    {args[0]} {
        redir https://{args[1]} permanent
    }
}

# App Auth
# Usage: import app_auth "APP_AUTH_PATH" "APP_AUTH_USER" "APP_AUTH_PASSWORD_ENCRYPTED"
# Arg0: Path Matcher
# Arg1: Username
# Arg2: Already Encrypted Password (use "caddy hash-password")
(app_auth) {
    basicauth {args[0]} {
        {args[1]} {args[2]}
    }
}

# PHP Handler Custom
# Usage: import app_handler_php "HOST_APP_TYPE_VERSION" "HOST_APP_USER" "APP_ROOT_PATH"
# Example: import app_handler_php "8.4" "app-webuser" "/var/www/domain.tld/httpdocs
# HOST_APP_TYPE_VERSION = PHPVERSION
# HOST_APP_USER = PHPUSER / WEBUSER
# APP_ROOT_PATH = abs. path to your app, not to the "public" path!
# (see also: https://caddyserver.com/docs/caddyfile/directives/php_fastcgi)
(app_handler_php) {
    # Backend Folders
    @backendFolders {
        path /typo3/*
        path /backend/*
        path /admin/*
        path /login/*
        path /wp-admin/*
    }

    # PHP Backends
    # Windows
    php_fastcgi @backendFolders 127.0.0.1:90{args[0]} {
        env TYPO3_CONTEXT Development
        env TYPO3_PATH_APP {args[2]}
        env TYPO3_PATH_ROOT {args[2]}/public
        try_files {path} {path}/index.php /typo3/index.php /backend/index.php /admin/index.php /login/index.php /wp-admin/index.php
    }

    # Linux
    # php_fastcgi @backendFolders unix//run/php/php{args[0]}-fpm-{args[1]}.sock {
    #     env TYPO3_CONTEXT Development
    #     env TYPO3_PATH_APP {args[2]}
    #     env TYPO3_PATH_ROOT {args[2]}/public
    #     try_files {path} {path}/index.php /typo3/index.php /backend/index.php /admin/index.php /login/index.php /wp-admin/index.php
    # }

    # Windows
    php_fastcgi 127.0.0.1:90{args[0]} {
        env TYPO3_CONTEXT Development
        env TYPO3_PATH_APP {args[2]}
        env TYPO3_PATH_ROOT {args[2]}/public
        try_files {path} {path}/index.php index.php shopware.php index.html
    }

    # PHP Defaults
    # Linux
    # php_fastcgi unix//run/php/php{args[0]}-fpm-{args[1]}.sock {
    #    env TYPO3_CONTEXT Development
    #    env TYPO3_PATH_APP {args[2]}
    #    env TYPO3_PATH_ROOT {args[2]}/public
    #    try_files {path} {path}/index.php index.php shopware.php
    # }
}

(app_handler_php_old) {
    # Backend Folders
    @backendFolders {
        path /typo3/*
        path /backend/*
        path /admin/*
        path /login/*
        path /wp-admin/*
    }

    # PHP Backends
    # Windows
    php_fastcgi @backendFolders 127.0.0.1:90{args[0]} {
        env TYPO3_CONTEXT Development
        try_files {path} {path}/index.php /typo3/index.php /backend/index.php /admin/index.php /login/index.php /wp-admin/index.php
    }

    # Windows
    php_fastcgi 127.0.0.1:90{args[0]} {
        env TYPO3_CONTEXT Development
        try_files {path} {path}/index.php index.php shopware.php index.html
    }
}

# Node Handler (as reverse proxy)
# Usage: import app_handler_node "HOST_APP_PORT"
(app_handler_node) {
    reverse_proxy 127.0.0.1:{args[0]}
}

# WWW Handler (redirect)
(app_www_redirect) {
    www.{args[0]} {
        redir {args[0]}{uri} permanent
    }
}

# Usage: import app_fileserver "..."
# Example: import app_fileserver "php"
(app_fileserver) {
    import app_fileserver_{args[0]}
}

(app_fileserver_html) {
    file_server
}

(app_fileserver_php) {
    file_server
}

(app_fileserver_node) {
    @publicPaths {
        # NodeJS
        path /public/*
        path /build/*
        path /static/*
        path /css/*
        path /img/*
    }
    file_server @publicPaths
}

(app_fileserver_typo3) {
    @publicPaths {
        # Typo3
        path /fileadmin/*
        path /typo3temp/assets/*
        path /uploads/*
        path */Public/*
    }
    file_server @publicPaths

    # Also specific paths possible (one-liner):
    # @public path /example/Public/* /Public/*
    # file_server @public
}

(app_fileserver_mosparo) {
    @publicPaths {
        # Mosparo
        path /build/*
        path /resources/*
        path /bundles/*
    }
    file_server @publicPaths

    # Also specific paths possible (one-liner):
    # @public path /example/Public/* /Public/*
    # file_server @public
}

(app_fileserver_shopware) {
    @publicPaths {
        # Shopware
        path /themes/*
        path /files/*
        path /media/*
        path /web/*
        path /public/*
        path /engine/*
        path */assets/*
    }
    file_server @publicPaths
}

(app_fileserver_wordpress) {
    @publicPaths {
        # Wordpress
        path /wp-admin/*
        path /wp-content/*
        path /wp-includes/*
        path /wp-json/*
    }
    file_server @publicPaths
}
